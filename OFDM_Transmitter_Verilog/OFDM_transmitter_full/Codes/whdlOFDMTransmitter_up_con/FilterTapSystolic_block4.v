// -------------------------------------------------------------
// 
// File Name: hdl_prj\hdlsrc\whdlOFDMTransmitter_up_con\FilterTapSystolic_block4.v
// Created: 2023-03-08 15:37:28
// 
// Generated by MATLAB 9.13 and HDL Coder 4.0
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: FilterTapSystolic_block4
// Source Path: whdlOFDMTransmitter_up_con/OFDM_UC/HDL_DUC/Lowpass Interpolator/whdlOFDMTransmitter_up_con/OFDM_UC/HDL_DUC/Lowpass 
// Interpolator/FIRFilter2/FilterTapSystoli
// Hierarchy Level: 4
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module FilterTapSystolic_block4
          (clk,
           enb_1_32_0,
           din_im,
           coeff,
           sumIn,
           sumOut);


  input   clk;
  input   enb_1_32_0;
  input   signed [15:0] din_im;  // sfix16_En13
  input   signed [15:0] coeff;  // sfix16_En15
  input   signed [32:0] sumIn;  // sfix33_En28
  output  signed [32:0] sumOut;  // sfix33_En28


  reg signed [15:0] fTap_din_reg1;  // sfix16
  reg signed [15:0] fTap_coef_reg1;  // sfix16
  reg signed [15:0] fTap_din_reg2;  // sfix16
  reg signed [15:0] fTap_coef_reg2;  // sfix16
  reg signed [31:0] fTap_mult_reg;  // sfix32
  reg signed [32:0] fTap_addout_reg;  // sfix33
  wire signed [32:0] fTap_addout_reg_next;  // sfix33_En28
  wire signed [32:0] fTap_add_cast;  // sfix33_En28

  initial begin
    fTap_din_reg1 = 16'sb0000000000000000;
    fTap_coef_reg1 = 16'sb0000000000000000;
    fTap_din_reg2 = 16'sb0000000000000000;
    fTap_coef_reg2 = 16'sb0000000000000000;
    fTap_mult_reg = 32'sb00000000000000000000000000000000;
    fTap_addout_reg = 33'sh000000000;
  end

  // FilterTapSystolicS
  always @(posedge clk)
    begin : fTap_process
      if (enb_1_32_0) begin
        fTap_addout_reg <= fTap_addout_reg_next;
        fTap_mult_reg <= fTap_din_reg2 * fTap_coef_reg2;
        fTap_din_reg2 <= fTap_din_reg1;
        fTap_coef_reg2 <= fTap_coef_reg1;
        fTap_din_reg1 <= din_im;
        fTap_coef_reg1 <= coeff;
      end
    end

  assign sumOut = fTap_addout_reg;
  assign fTap_add_cast = {fTap_mult_reg[31], fTap_mult_reg};
  assign fTap_addout_reg_next = fTap_add_cast + sumIn;



endmodule  // FilterTapSystolic_block4

